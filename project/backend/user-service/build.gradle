plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.1'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'jacoco'
	id 'org.sonarqube' version '3.5.0.2730'
}

group = 'com.meta'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.keycloak:keycloak-admin-client:24.0.1'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.projectlombok:lombok'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'
	annotationProcessor 'org.projectlombok:lombok'
}

jacoco {
	toolVersion = "0.8.8"
}

// ✅ JaCoCo test report configuration
jacocoTestReport {
	dependsOn test
	reports {
		xml.required = true
		html.required = false
		csv.required = false
	}
}

// ✅ SonarQube (SonarCloud) configuration
sonarqube {
	properties {
		property "sonar.projectKey", "Learnathon-By-Geeky-Solutions_code-warriors-"
		property "sonar.organization", "Learnathon-By-Geeky-Solutions"
		property "sonar.host.url", "https://sonarcloud.io"
		property "sonar.login", System.getenv("SONAR_TOKEN")
		property "sonar.coverage.jacoco.xmlReportPaths", "${buildDir}/reports/jacoco/test/jacocoTestReport.xml"
	}
}

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}
