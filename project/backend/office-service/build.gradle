plugins {
    id 'java'
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
    id 'jacoco'
}

ext {
    set('springCloudVersion', "2024.0.0")
    set('testcontainersVersion', "1.19.7")
}

group = 'com.meta'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-mysql'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-api:2.7.0'
    implementation 'org.modelmapper:modelmapper:2.1.1'
    implementation 'io.github.cdimascio:java-dotenv:5.2.2'
    implementation 'org.keycloak:keycloak-core:22.0.1'
    implementation 'com.auth0:java-jwt:4.4.0'
    implementation 'org.springframework.cloud:spring-cloud-circuitbreaker-resilience4j'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    runtimeOnly 'com.mysql:mysql-connector-j:8.0.33'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'io.rest-assured:rest-assured:5.4.0'
    testImplementation 'io.rest-assured:json-path:5.4.0'
    testImplementation 'io.rest-assured:xml-path:5.4.0'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    testImplementation 'org.testcontainers:testcontainers'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:mysql'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
    }
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport

    jvmArgs '--add-opens=java.base/java.lang=ALL-UNNAMED'
    jvmArgs '--add-opens=java.base/java.util=ALL-UNNAMED'
    systemProperty "mockito.mock.creation.default", "mock-maker-inline"
}

jacoco {
    toolVersion = "0.8.11"
}

jacocoTestReport {
    dependsOn test

    reports {
        xml.required = true
        html.required = true
        csv.required = false

        html.outputLocation = layout.buildDirectory.dir('reports/jacoco/test/html')
        xml.outputLocation = layout.buildDirectory.file('reports/jacoco/test/jacocoTestReport.xml')
        csv.outputLocation = layout.buildDirectory.file('reports/jacoco/test/jacocoTestReport.csv')
    }
}
tasks.named('test', Test) {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}
