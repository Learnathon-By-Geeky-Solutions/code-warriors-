import org.springframework.boot.gradle.plugin.SpringBootPlugin

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.1'
	id 'io.spring.dependency-management'
	id 'jacoco'
	id 'org.sonarqube' version '4.4.1.3373'
	id 'org.graalvm.buildtools.native' version '0.10.6'
}

ext {
	lombokVersion = '1.18.32'
	openTelemetryVersion = '2.15.0'
}

group = 'com.meta'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencyManagement {
	imports {
		mavenBom SpringBootPlugin.BOM_COORDINATES
		mavenBom "io.opentelemetry.instrumentation:opentelemetry-instrumentation-bom:${openTelemetryVersion}"
	}
}

dependencies {
	// Spring Boot Starters
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	// Metrics and Monitoring
	implementation 'io.micrometer:micrometer-registry-prometheus'

	// Lombok
	compileOnly "org.projectlombok:lombok:${lombokVersion}"
	annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

	// Database
	runtimeOnly 'com.mysql:mysql-connector-j'

	// Developer Tools
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// OpenTelemetry
	implementation 'io.opentelemetry.instrumentation:opentelemetry-spring-boot-starter'
	implementation 'io.opentelemetry:opentelemetry-api'
	implementation 'io.opentelemetry:opentelemetry-sdk'
	implementation 'io.opentelemetry:opentelemetry-exporter-zipkin'
	implementation 'io.opentelemetry:opentelemetry-exporter-logging'
	implementation 'io.opentelemetry.semconv:opentelemetry-semconv'
	runtimeOnly 'io.opentelemetry.instrumentation:opentelemetry-micrometer-1.5'
	implementation 'io.opentelemetry.contrib:opentelemetry-samplers:1.46.0-alpha'

	// Testing
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.testcontainers:testcontainers:1.19.7'
	testImplementation 'org.testcontainers:junit-jupiter:1.19.7'
	testImplementation 'org.testcontainers:mysql:1.19.7'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
}

jacoco {
	toolVersion = "0.8.11"
}

jacocoTestReport {
	dependsOn test

	reports {
		xml.required = true
		html.required = true
		csv.required = false

		html.outputLocation = layout.buildDirectory.dir('reports/jacoco/test/html')
		xml.outputLocation = layout.buildDirectory.file('reports/jacoco/test/jacocoTestReport.xml')
		csv.outputLocation = layout.buildDirectory.file('reports/jacoco/test/jacocoTestReport.csv')
	}
}

tasks.named('test', Test) {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

