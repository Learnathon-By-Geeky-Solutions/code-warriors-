plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.1' // Add version explicitly
    id 'io.spring.dependency-management' version '1.1.7' // Add version explicitly
    id 'jacoco' // Add jacoco for code coverage
}

group = 'com.example' // <- optional, but usually added
version = '0.0.1-SNAPSHOT' // <- optional

java {
    sourceCompatibility = 21// or 21 if you're using it
}

ext {
    set('springCloudVersion', "2024.0.0")
}

dependencies {
    implementation 'org.springframework.cloud:spring-cloud-starter-gateway-mvc'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-api:2.7.0'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.cloud:spring-cloud-circuitbreaker-resilience4j'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

// Jacoco test coverage config
jacoco {
    toolVersion = "0.8.11"
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport // always generate report after tests
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required.set(true)
        csv.required.set(false)
        html.outputLocation.set(layout.buildDirectory.dir('jacocoHtml'))
    }
}
tasks.named('test', Test) {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}
