["Lab 07: Configuration of ACLs, NAT, and DHCP\n7.1\nObjectives:\n\u2022 Describe the concept of Access Control List (ACL)\n\u2022 Describe the concept of Network Address Translation (NAT)\n\u2022 Describe the concept of Dynamic Host Configuration Protocol (DHCP)\n\u2022 Implement ACL, NAT, and DHCP for given topologies\n7.2\nTheory:\nAs with other labs, this lab will also build up on the concepts and techniques of previous labs. So, make sure you have properly understood the previous lab contents. This section explores key networking concepts, including Access Control Lists (ACLs), Net-\nwork Address Translation (NAT), and Dynamic Host Configuration Protocol (DHCP). ACLs\nare introduced as mechanisms for regulating access to network resources, ensuring that only\nauthorized users or devices can connect to specific services. NAT addresses the limitations\nof IPv4 address exhaustion by allowing internal devices to use private IP addresses while a\ngateway router translates these to a smaller number of globally unique addresses for internet\ncommunication.", "DHCP is a protocol that automates the assignment of IP addresses and net-\nwork configuration, facilitating efficient network management through a server that allocates\naddresses from a maintained pool. 7.2.1\nAccess Control List (ACL)\nDefining who can/can\u2019t access what is basically the gist of ACL. In our day-to-day lives, we\napply the ACL concept in many areas. A simple example could be that you need to show your\nID card to enter an office. There is a list of employees, and your ID is checked against that list\nto grant access.", "Similar access controls are in effect virtually everywhere, especially in places\nwhere security is critical. In the digital world, this access control is needed so that only the\nallowed ones can access a certain digital resource. For example, only admins would be allowed\naccess to the backend of a web server, or only database admins would be allowed to access a\ndatabase server, etc. In networked devices, ACLs allow only authorized persons/devices to access a certain resource. For example, you can define that only a certain host device can access your webserver.", "You\ncan also define ACLs so that hosts belonging to a particular network can not communicate\nwith hosts of certain other networks. More scenarios can be defined depending on the needs of\nan administrator. In this part of the lab, we will learn about Cisco IP ACL, i.e., filtering network traffic based\non IP address. Several ACL types can be configured on a Cisco device. However, we will only\nfocus on Numbered Standard IPv4 ACL.", "There are two steps to implement an ACL. First,\ndefine the rule. Second, apply the rule to an interface. The command format for defining a numbered standard IP ACL is:\nRouter(config)# access-list access_list_number {permit|deny}\n{(source_address source_wildcard)|any}\n1\nYou can either permit or deny a packet based on the source IP of the packet in numbered stan-\ndard IP ACL. Like the OSPF configuration, you must specify a wildcard mask to permit/deny\na range of source IP addresses based on the given pattern.", "You should remember that when-\never you apply an ACL to an interface, all the traffic that does not match any ACL rule will\nbe discarded by default. For example, you have defined an ACL to deny a certain source IP. Whenever you apply that rule to an interface, all packets other than the denied source will also\nbe discarded because there is no matching rule for those packets. So, you must allow other\ntraffic explicitly by defining another ACL. The any keyword is handy in this case.", "To permit\n(or deny) any packet other than the previously specified rules, you can add the keyword any\nin place of the source_address and source_wildcard like the following:\nRouter(config)# access-list 1 permit any\nAnother thing is you can only use numbers from 1 to 99 to specify the access list number. Other\nnumbers are used for extended numbered ACLs. After defining the ACL rule, we must apply\nit to an interface. Remember that the ACL has no effect until you apply it. The command\nformat for applying an ACL to an interface is:\nRouter(config-if)# ip access-group access_list_number {in|out}\nThe ACL is applied either for inbound or outbound traffic of an interface, and you need to\nspecify the corresponding keyword, i.e., in or out for that.", "One best practice before applying\nan ACL to an interface is to verify the rule by using the following command:\nRouter# show access-lists\n7.2.2\nNetwork Address Translation (NAT)\nYou already know from your theory lectures that IPv6 was born partly due to the address space\nexhaustion of IPv4. One great technique that was the key to the survival of IPv4 is NAT. If\nnot for NAT, IPv4 would be long gone by now. And that gave the world some time to adopt\nIPv6 on a mass scale. In this part of the lab, you will learn about this special technique called\nNAT.", "Basically, the idea of NAT is that there will be a set of IP addresses for the hosts in the internal\nnetwork, and to the outside world, those internal hosts will be exposed using a different set of\nIP addresses. You know that each host is recognized through its IP address on the internet. To conform with this, each host connected to the internet must have a unique IP, which would\nreadily become nearly impossible considering billions of connected devices. NAT allows you to assign arbitrary IP addresses from the Private IP range to your internal\nhosts where these addresses are only locally significant, i.e., locally unique. Then, in the edge\nor gateway router of the network, you will have one or a set of IP addresses that are globally\nunique.", "That edge or gateway router will convert/translate from a globally unique address to\na locally unique one or vice versa. The outside world will not know the actual IP addresses\nof internal hosts. Moreover, your organization can buy only a handful of global IP addresses\nfrom the ISP but can use those with much greater Private IP addresses for the internal hosts\nthrough NAT. The following figure summarizes what we just talked about. 2\nFigure 7.1: Network Address Translation from internal Private IP addresses to the globally\nunique IP address.", "Now that we know the basics of NAT let us get technical. There are three types of NAT that\nyou can define in Cisco devices: Static, Dynamic, and Overloaded or Port Address Translation\n(PAT). Static NAT\nIt allows one-to-one mapping between local and global addresses. You will have to configure\none global IP address for each internal host you want NAT to translate. The command to\nenable the static translation is as follows:\nRouter(config)# ip nat inside source static local_ip global_ip\nAfter you have specified the translation, you must do two things \u2014 first, you need to specify\nthe inside interface, and second, you need to specify the outside interface.", "The inside\ninterface denotes that the hosts connected to it will have their IPs translated to the global\none. The outside interface denotes that the translated packets will go out to the world through\nit. There can be more than one inside or outside interface. After you specify these interfaces,\nNAT will start the specified translations. You also need to specify these inside and outside\ninterfaces for the other two NAT types.", "Following are the commands to specify the inside and\noutside interfaces:\nRouter(config-if)# ip nat inside\nRouter(config-if)# ip nat outside\nDynamic NAT\nThis type of NAT establishes a mapping between a local address and a pool of global addresses. A global IP address will be selected dynamically from the pool for a single local address. When\nnot in use, the assigned global IP will be released after a certain time-out period so other hosts\ncan reuse it. This is more convenient than the static one as you do not need to manually\nconfigure every mapping. To configure dynamic NAT, you must create an access list that\npermits the local addresses to be translated.", "The command format for defining a numbered\nstandard IP ACL is:\n3\nRouter(config)# access-list access_list_number permit source_address\nsource_wildcard\nThen, you have to specify the pool of global IP addresses from where the IPs will be allocated. The pool is a range of IP addresses in a given network where the subnet mask will specify the\ncorresponding network portion. The command to specify the pool is as follows:\nRouter(config)# ip nat pool POOL_NAME start_ip end_ip netmask subnet_mask\nThen, you must establish the relation between the earlier defined access list and the nat pool\nthrough the following command:\nRouter(config)# ip nat inside source list access_list_number pool POOL_NAME\nAfter that, you must specify the inside and outside interfaces, such as the static NAT. Port Address Translation (PAT)\nIn the worst case, you would need as many global IP addresses as the internal hosts for dy-\nnamic NAT. This is not plausible in most circumstances where you have limited global IP and\nhundreds of local hosts.", "It is where PAT comes in. PAT establishes a many-to-one mapping\nbetween local hosts and a global IP address. It uses the Port (TCP/UDP port) information to\ndistinguish between different internal hosts and assign a single global IP to all those addresses,\nthus significantly conserving the global address pool. The configuration of PAT is almost sim-\nilar to dynamic NAT, except you have to add the overload keyword at the very end while\nspecifying the relation between the access list and the nat pool. The command format for the\nconfiguration of PAT is as follows:\nRouter(config)# ip nat inside source list access_list_number pool POOL_NAME\noverload\nYou can also configure PAT using the IP address of an interface rather than a NAT pool.", "In\nthis case, the local IPs will be translated to the interface\u2019s IP address. Router(config)# ip nat inside source list access_list_number interface\nInterface_NAME_Connected_to_Outside_Networks overload\n7.2.3\nDynamic Host Configuration Protocol (DHCP)\nDHCP is a network management protocol used to automate the process of configuring devices\non IP networks, thus allowing them to use network services such as DNS, NTP, and any com-\nmunication protocol based on UDP or TCP. A DHCP server dynamically assigns an IP address\nand other network configuration parameters to each device on a network so it can communicate\nwith other IP networks. The DHCP server maintains a database of available IP addresses and configuration informa-\ntion. When it receives a request from a client, the DHCP server determines the network to\nwhich the DHCP client is connected, then allocates an IP address or prefix appropriate for the\nclient from that network, and sends configuration information appropriate for that client.", "The DHCP server and DHCP client must be connected to the same network link. In larger net-\nworks, each network link contains one or more DHCP relay agents. These DHCP relay agents\nreceive messages from DHCP clients and forward them to DHCP servers. DHCP servers send\nresponses back to the relay agent, and the relay agent then sends these responses to the DHCP\n4\nclient on the local network link. DHCP servers typically grant IP addresses to clients for a limited interval called a lease.", "DHCP\nclients are responsible for renewing their IP address before that interval has expired and must\nstop using it once it has expired if they have not been able to renew it. 7.3\nConfiguration of ACL, NAT, and DHCP with Cisco Devices\n7.3.1\nConfigure ACL\nA router of device model 2911, three switches of device model 2960, and three PCs have been\nused in the sample topology shown in Figure 7.2 for the ACL configuration. Figure 7.2: A sample network topology for the configuration of ACL. a. Configure R1 Interfaces\nRouter(config)# int g0/0\nRouter(config-if)# ip address 192.168.10.1 255.255.255.0\nRouter(config-if)# no shutdown\nRouter(config-if)# exit\nRouter(config)# int g0/1\nRouter(config-if)# ip address 192.168.20.1 255.255.255.0\nRouter(config-if)# no shutdown\nRouter(config-if)# exit\nRouter(config)# int g0/2\nRouter(config-if)# ip address 192.168.30.1 255.255.255.0\nRouter(config-if)# no shutdown\nRouter(config-if)# end\nRouter# copy running-config startup-config\n5\nb. Configure PC0\nIP: 192.168.10.5\nMask: 255.255.255.0\nGateway: 192.168.10.1\nc. Configure PC1\nIP: 192.168.20.5\nMask: 255.255.255.0\nGateway: 192.168.20.1\nd. Configure PC1\nIP: 192.168.30.5\nMask: 255.255.255.0\nGateway: 192.168.30.1\ne. Define ACL\nRouter(config)# access-list 1 deny 192.168.10.0 0.0.0.255\nRouter(config)# access-list 1 permit any\nf. Verify ACL\nRouter# show access-lists\ng. Apply ACL\nRouter(config)# interface g0/2\nRouter(config-if)# ip access-group 1 out\nh. Verify if ACL has been applied to the router interface\ni. Go to the simulation mode.", "ii. From the event list, allow only ICMP-type messages. iii. Ping a message from PC0 to PC2. iv.", "The message will not be sent to the PC1 from the router. Instead, it will send back a\nnotification message to PC0. 6\n7.3.2\nConfigure Static NAT\nTwo routers of device model 2811, one switch of device model 2960, two PCs, and one server\nhave been used in the sample topology shown in Figure 7.3 for the NAT configuration. Figure 7.3: A sample network topology for the configuration of NAT. a. Configure R0 Interfaces\nRouter(config)# int fa0/0\nRouter(config-if)# ip address 192.168.10.1 255.255.255.0\nRouter(config-if)# no shutdown\nRouter(config)# int fa0/1\nRouter(config-if)# ip address 20.20.20.1 255.255.255.252\nRouter(config-if)# no shutdown\nRouter(config-if)# exit\nRouter(config)# ip route 10.0.0.0 255.255.255.0 20.20.20.2\nRouter(config)# exit\nRouter# copy running-config startup-config\nb. Configure R1 Interfaces\nRouter(config)# int fa0/1\nRouter(config-if)# ip address 10.0.0.1 255.255.255.0\nRouter(config-if)# no shutdown\nRouter(config)# int fa0/0\nRouter(config-if)# ip address 20.20.20.2 255.255.255.252\nRouter(config-if)# no shutdown\nRouter(config-if)# exit\nRouter(config)# ip route 192.168.10.0 255.255.255.0 20.20.20.1\nRouter(config)# exit\nRouter# copy running-config startup-config\n7\nc. Configure PC0\nIP: 192.168.10.5\nMask: 255.255.255.0\nGateway: 192.168.10.1\nd. Configure PC1\nIP: 192.168.10.10\nMask: 255.255.255.0\nGateway: 192.168.10.1\ne. Configure Server0\nIP: 10.0.0.5\nMask: 255.255.255.0\nGateway: 10.0.0.1\nf. Enable static NAT insider Router1\nRouter(config)# ip nat inside source static 10.0.0.5 50.0.0.5\nRouter(config)# int fa0/1\nRouter(config-if)# ip nat inside\nRouter(config)# int fa0/0\nRouter(config-if)# ip nat outside\nRouter(config-if)# end\nRouter# copy running-config startup-config\ng. Verify NAT\nRouter# show ip nat translations\nRouter# show ip nat statistics\n8\n7.3.3\nConfigure Dynamic NAT\nThe exact network topology with the same device models, as shown in Figure 7.3, has been\nused for this configuration.", "The parts Configure R0 Interfaces, Configure R1 Interfaces, Configure all the PCs\nand Server0, and Verify NAT are the same as the section 7.3.2. The only difference is in\nthe configuration of NAT inside Router1. a. Enable static NAT insider Router1\nCreate an ACL that permits all the IP addresses from the network 192.168.10.0/24. Router(config)# access-list 1 permit 192.168.10.0 0.0.0.255\nCreate a NAT Pool for the Global IP Addresses from the network 50.0.0.0/30\nRouter(config)# ip nat pool NAT_Pool 50.0.0.1 50.0.0.3 netmask 255.255.255.252\nAssociate the ACL to the NAT pool and configure the interfaces with appropriate inside\nand outside NAT commands.", "Router(config)#ip nat inside source list 1 pool NAT_Pool\nRouter(config)# int fa0/1\nRouter(config-if)# ip nat inside\nRouter(config)# int fa0/0\nRouter(config-if)# ip nat outside\nRouter(config-if)# end\nRouter# copy running-config startup-config\n9\n7.3.4\nConfigure DHCP (using server)\nA router of device model 2811, two switches of device model 2960, two PCs, two laptops,\nand one server have been used in the sample topology shown in Figure 7.4 for the DHCP\nconfiguration. Figure 7.4: A sample network topology for the configuration of DHCP. a. Configure DHCP Server\nIP Address: 192.168.1.2\nDefault: 192.168.1.1\nb. Make DHCP Pools\nGo to Services and then DHCP, and change the following fields. Pool Name: dotONEnetwork\nDefault: 192.168.1.1\nStart IP: 192.168.1.3\nMax Number: 20\nSelect Add to add the Address Pool to the server.", "Select Save to save the modification to\nthe server. To add another pool to the server, change the information as follows and then hit Add and\nSave buttons again. Pool Name: dotTWOnetwork\nDefault: 192.168.2.1\nStart IP: 192.168.2.2\nMax Number: 20\nDo not forget to turn on the DHCP server. 10\nc. Configure R1 Interfaces\nR1(config)#int fa0/0\nR1(config-if)# ip address 192.168.1.1 255.255.255.0\nR1(config-if)# ip helper-address 192.168.1.2\nR1(config-if)#no shutdown\nR1(config-if)#exit\nR1(config)#int fa0/1\nR1(config-if)# ip address 192.168.2.1 255.255.255.0\nR1(config-if)# ip helper-address 192.168.1.2\nR1(config-if)#no shutdown\nR1(config-if)# end\nR1# copy running-config startup-config\nd. Configure all the PCs\nJust click DHCP and the server will do the rest. e. Verify\nPing PC1 from PC0\n7.3.5\nConfigure DHCP (using router)\nThe exact network topology with the same device models, as shown in Figure 7.4, has been\nused for this configuration.", "Configure the DHCP server in the router instead of a server. R1(config)# ip dhcp pool dotONEnetwork\nR1(dhcp-config)# default-router 192.168.1.1\nR1(dhcp-config)# network 192.168.1.0 255.255.255.0\nR1(dhcp-config)# exit\nR1(config)# ip dhcp pool dotTWOnetwork\nR1(dhcp-config)# default-router 192.168.2.1\nR1(dhcp-config)# network 192.168.2.0 255.255.255.0\nR1(dhcp-config)# exit\nThe rest of the configuration, i.e., Configure R1 Interfaces, Configure all the PCs, and Verify\nare same as the section 7.3.4. Use show ip dhcp binding inside the router to see the status of the configured DHCP. 11\n7.4\nTasks:\n1. In this task, you will configure ACL with the given requirements for a given scenario.", "The task description is provided in 7.4.1. No .pka file is provided for this task. 2. You will configure Static NAT following the instructions given in the task. The task\ndescription for this task is provided in 7.4.2.", "You are provided with a .pka file for this\ntask. 3. You will configure dynamic NAT following the instructions given in the task. The task\ndescription for this task is provided in 7.4.3. You are provided with a .pka file for this\ntask.", "4. You will configure PAT following the instructions given in the task. The task description\nfor this task is provided in 7.4.4. You are provided with a .pka file for this task. 5.", "In this task, you configure DHCP servers. You will configure servers using a server and\na router. The detailed description is given in 7.4.5. No .pka file is provided for this task. 12\n7.4.1\nTask 1 - Configure ACL\nScenario\nIUT is given an IP address of 192.168.X.0, where X is the last two (2) digits of your Student\nID.", "IUT Medical Center only wants to allow traffic from the IUT Administrative Building\nand block traffic from Academic Building -1 and Academic Building -2. Make appropriate\nconnections with subnet masks to form the topology. (You can consider the academic buildings\nsharing a single switch) Then apply ACL to fulfill the criteria. Objectives\n\u2022 IUT Medical Center wants to allow traffic only from the IUT Administrative Building\nand block traffic from Academic Building-1 and Academic Building-2. \u2022 You need to configure a network that ensures that:\n\u2013 The IUT Medical Center can communicate with the IUT Administrative Building,\nAcademic Building-1, and Academic Building-2.", "\u2013 The Academic Building-1 and Academic Building-2 are blocked from accessing the\nIUT Medical Center. \u2022 Implement appropriate subnets and apply an Access Control List (ACL) to restrict traffic. Network Components and Design\ni. IP Addressing\n\u2022 Assign the network IP address 192.168.X.0/24, where X is the last two digits of your\nstudent ID. For example, if your student ID ends with 45, your network address will\nbe 192.168.45.0/24. \u2022 This address space will be used for assigning IP addresses to all IUT devices.", "ii. Building Segments\n\u2022 IUT Administrative Building: Devices in this building should be on the same network\nas the IUT Medical Center to ensure they can communicate with each other. \u2022 Academic Building-1 and Academic Building-2: These buildings will have separate\nsubnets, and traffic to the IUT Medical Center should be blocked using ACL. iii. Subnetting\n\u2022 You can use VLSM masks to divide the network into smaller subnets.", "For example:\n\u2013 The first subnet with a subnet prefix of 25 can be used for the IUT Medical\nCenter and the IUT Administrative Building. \u2013 The second Subnet with a prefix of 26 is for Academic Building-1. \u2013 And the third Subnet with a prefix of 26 is for Academic Building-2. iv. Access Control List (ACL)\n\u2022 The IUT Medical Center should be accessible from the IUT Administrative Building\nbut not from Academic Building-1 and Academic Building-2.", "13\n7.4.2\nTask 2 - Configure Static NAT\nTopology\nFigure 7.5: A sample network topology for the configuration of Static NAT. Objectives\nPart 1: Test Access without NAT\nPart 2: Configure Static NAT\nPart 3: Test Access with NAT\nScenario\nIn IPv4-configured networks, clients and servers use private addressing. Before packets with\nprivate addressing can cross then Internet, they need to be translated to public addressing. Servers that are accessed from outside the organization are usually assigned both a public\nand a private static IP address. In this activity, you will configure static NAT so that outside\ndevices can access and inside server at its public address.", "Instruction\nPart 1: Test Access without NAT\nStep 1: Attempt to connect to Server1 using Simulation Mode. a. From PC1 or L1, attempt to connect to the Server1 web page at 172.16.16.1. Use the\nWeb Browser to browse Server1 at 172.16.16.1. The attempts should fail.", "b. From PC1, ping the R1 S0/0/0 interface. The ping should succeed. Step 2: View R1 routing table and running-config. a.", "View the running configuration of R1. Note that there are no commands referring to\nNAT. b. Verify that the routing table does not contain entries referring to the IP addresses used\nby PC1 and L1. c. Verify that NAT is not being used by R1. 14\nR1# show ip nat translations\nPart 2: Configure Static NAT\nStep 1: Configure static NAT statements.", "Refer to the Topology shown in Figure 7.5. Create a static NAT translation to map the\nServer1 inside address to its outside address. Step 2: Configure interfaces. Configure the correct inside and outside interfaces. Part 3: Test Access with NAT\nStep 1: Verify connectivity to the Server1 web page.", "a. Open the command prompt on PC1 or L1, attempt to ping to the public address for\nServer1. Pings should succeed. b. Verify that both PC1 and L1 can now access the Server1 web page. Step 2: View NAT translations\nUse the following commands to verify the static NAT configuration:\nshow running-config\nshow ip nat translations\nshow ip nat statistics\n15\n7.4.3\nTask 3 - Configure Dynamic NAT\nTopology\nFigure 7.6: A sample network topology for the configuration of Dynamic NAT.", "Objectives\nPart 1: Configure Dynamic NAT\nPart 2: Verify NAT Implementation\nInstruction\nPart 1: Configure Dynamic NAT\nStep 1: Configure traffic that will be permitted. On R2, configure one statement for ACL 1 to permit any address belonging to 172.16.0.0/16. Step 2: Configure interfaces. Configure R2 with a NAT pool that uses all four addresses in the 209.165.76.196/30 address\nspace. Notice in the topology shown in Figure 7.6, there are 3 network ranges that would be\ntranslated based on the ACL created.", "What will happen if more than 2 devices attempt to\naccess the Internet? Step 3: Associate ACL1 with the NAT pool. Step 4: Configure the NAT interfaces. Configure R2 interfaces with the appropriate inside and outside NAT commands. 16\nPart 2: Verify NAT Implementation\nStep 1: Access services across the Internet.", "From the web browser of L1, PC1 or PC2, access the web page for Server1. Step 2: View NAT translations\nView the NAT translations on R2. show running-config\nshow ip nat translations\nshow ip nat statistics\n17\n7.4.4\nTask 4 - Configure PAT\nTopology\nFigure 7.7: A sample network topology for the configuration of PAT. Objectives\nPart 1: Configure Dynamic NAT with Overload\nPart 2: Verify Dynamic NAT with Overload Implementation\nPart 3: Configure PAT using an Interface\nPart 4: Verify PAT Interface Implementation\nInstruction\nPart 1: Configure Dynamic NAT with Overload\nStep 1: Configure traffic that will be permitted. On R1, configure one statement for ACL 1 to permit any address belonging to 172.16.0.0/16.", "R1(config)# access-list 1 permit 172.16.0.0 0.0.255.255\nStep 2: Configure a pool of address for NAT. Configure R1 with a NAT pool that uses the two useable addresses in the 209.165.200.232/30\naddress space. R1(config)# ip nat pool ANY_POOL_NAME 209.165.200.233 209.165.200.234 netmask\n255.255.255.252\nStep 3: Associate ACL 1 with the NAT pool and allow addresses to be reused. R1(config)# ip nat inside source list 1 pool ANY_POOL_NAME overload\n18\nStep 4: Configure the NAT interfaces. Configure R1 interfaces with the appropriate inside and outside NAT commands.", "R1(config)# interface s0/1/0\nR1(config-if)# ip nat outside\nR1(config-if)# interface g0/0/0\nR1(config-if)# ip nat inside\nR1(config-if)# interface g0/0/1\nR1(config-if)# ip nat inside\nPart 2: Verify Dynamic NAT with Overload Implementation\nStep 1: Access services across the Internet. From the web browser of each of the PCs (PC1, L1, PC2, and L2) that use R1 as their\ngateway, access the web page for Server1. Question: Were all connections successful? Step 2: View NAT translations\nView the NAT translations on R1. R1# show ip nat translations\nNotice that all four devices were able to communicate, and they are using just one ad-\ndress out of the pool.", "PAT will continue to use the same address until it runs out of port\nnumbers to associate with the translation. Once that occurs, the next address in the pool\nwill be used. While the theoretical limit would be 65,536 since the port number field is a 16\nbit number, the device would likely run out of memory before that limit would be reached. Part 3: Configure PAT using an Interface\nStep 1: Configure traffic that will be permitted. On R2, configure one statement for ACL 2 to permit any address belonging to 172.17.0.0/16.", "Step 2: Associate ACL 2 with the NAT interface and allow addresses to be\nreused. R2(config)# ip nat inside source list 2 interface s0/1/1 overload\nStep 4: Configure the NAT interfaces. Configure R2 interfaces with the appropriate inside and outside NAT commands. Part 4: Verify PAT Interface Implementation\nStep 1: Access services across the Internet. From the web browser of each of the PCs (PC3, L3, PC4, and L4) that use R2 as their\ngateway, access the web page for Server1.", "Question: Were all connections successful? Step 2: View NAT translations\nView the NAT translations on R2. Step 3: Compare NAT statistics on R1 and R2. Compare the NAT statistics on the two devices. Question: Why doesn\u2019t R2 list any dynamic mappings?", "19\n7.4.5\nTask 5 - Configure DHCP servers\nTopology\nFigure 7.8: A sample network topology for the configuration of DHCP servers. Scenario\nYou are tasked with configuring three networks connected to two routers. Devices in Network\n1 and Network 2 should receive IP addresses dynamically from Router 1, while devices in\nNetwork 3 should receive IP addresses from Server 0. You are also required to configure\nappropriate routing protocols for inter-network communication. Network Design Overview\ni.", "Network 1\n\u2022 Subnet: 192.168.16.0/24\n\u2022 Devices in Network 1 will receive IP addresses dynamically from Router 1 using\nDHCP. \u2022 Devices in this network need to communicate with Network 2 and Network 3.\nii. Network 2\n\u2022 Subnet: 192.168.17.0/24\n\u2022 Devices in Network 2 will receive IP addresses dynamically from Router 1 using\nDHCP. \u2022 Devices in this network need to communicate with Network 1 and Network 3.\niii. Network 3\n\u2022 Subnet: 10.10.10.0/24\n20\n\u2022 Devices in Network 3 will receive IP addresses dynamically from Server 0 (Which\nacts as a DHCP server for this network).", "\u2022 Devices in this network need to communicate with Network 1 and Network 2. DHCP Configuration\nRouter 1 (DHCP Server for Network 1 and Network 2)\nRouter 1 will act as the DHCP server for Network 1 and Network 2. Configure DHCP pools\nto assign IP addresses dynamically to devices in both networks. a. Configure DHCP for Network 1 on Router 1\n\u2022 Configure a DHCP Pool Name. \u2022 Specify the address space for the DHCP Pool.", "\u2022 Define the default Gateway for the Pool. \u2022 Define the DNS Server for the Pool. b. Configure DHCP for Network 2 on Router 1\n\u2022 Configure a DHCP Pool Name. \u2022 Specify the address space for the DHCP Pool. \u2022 Define the default Gateway for the Pool.", "\u2022 Define the DNS Server for the Pool. Server 0 (DHCP Server for Network 3)\n\u2022 Go to the Services tab. \u2022 Go to DHCP and enable DHCP. \u2022 Set the DHCP Range for the DHCP Pool. \u2022 Set the Default Gateway to the appropriate IP address.", "\u2022 (Optional) Set DNS Server to 8.8.8.8. Assign appropriate IP addresses to the router interfaces and the server. Refer to\nthe topology shown in the Figure 7.8 for the IP addressing. Configure suitable routing protocol in the routers for successful communication. 21", "LIBRO\nProject Proposal\nCSE 4508\nAn intuitive library management system for cataloging, borrowing,\n and returning books with ease. 1\nABOUT US\nTeam Databaes\nTeam Members\nNayeem Fardin\n210041141\nNafis Fuad Shahid\n210041153\nMaroof Ahmed\n200041129\n2\n01\nCONTENT\n01\n02\n03\n04\n05\n06\nABOUT US\nS\nROLE OF RDB\nPROJECT OVERVIEW\nKEY DEVELOPMENTS\nS\nCONTENT\nROLE OF RDB\nENTITY-RELATIONSHIP DIAGRAM \nWhat We Do\nWhat We Do\n4\nLIBRO will be fully admin-controlled. Administrators will have the ability to\nmanage the catalog of books and student\nrecords, issue and return books, and track\nborrowing history along with overdue\nrecords. KEY DEVELOPMENTS\nKEY DEVELOPMENTS01BOOKRECORD MANAGEMENT\n01\n02\nSTUDENT RECORD MANAGEMENT\nRECORD\nMANAGEMENT\n03\nISSUING\n BOOKS\n & RETURNING BOOKS\n04\n04\nBORROWING\n RECORDSS\nOVERDUE\nTRACKING\n05\nOVERDUE  TRACKING\nROLE OF RDB\nROLE OF RDB\nROLE OF RDB\n03\nENFORCE DATA\nRINTEGRITY CONSTRAINTS\n04\n01\nPREVENT DATA\n REDUNDAN\nCY\n02\nRETRIEVE DATA FROM MULTIPLE TABLES FOR REPORTING\nAUTOMATE KEY \nSYSTEM OPERAT\nIONS\nERD\nERD\n7\nTECHNICAL CHALLENGES\nTECHNICAL CHALLENGES\nTECHNICAL CHALLENGES\nHandling Duplicate Data\n and User Validation\nEnsuring Data Inte\ngrity Across \nMultiple Tables\nStructuring queries to\n counter SQL injections\n9\n9"]