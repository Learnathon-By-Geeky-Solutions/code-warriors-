name: SonarCloud Analysis

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build-and-analyze:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('project/backend/multiplayer-map-service/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and Analyze Maven Project
        run: |
          echo "Building and analyzing Maven project..."
          # Change to the Maven project directory
          cd project/backend/multiplayer-map-service
          mvn clean verify sonar:sonar \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.organization=learnathon-by-geeky-solutions \
            -Dsonar.projectKey=Learnathon-By-Geeky-Solutions_code-warriors- \
            -DskipTests=true
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Make Gradle files executable
        run: |
          echo "Making Gradle files executable..."
          find project/backend/ -name "gradlew" -type f -not -path "project/backend/multiplayer-map-service*" -exec chmod +x {} \;

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('project/backend/**/build.gradle', 'project/backend/**/gradle-wrapper.properties', 'project/backend/settings.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Run Tests and Generate JaCoCo Reports (Gradle Modules)
        run: |
          echo "Running tests and generating JaCoCo reports for Gradle modules..."
          find project/backend/ -name "gradlew" -type f -not -path "project/backend/multiplayer-map-service*" -exec {} test jacocoTestReport --info --continue \;

      - name: SonarCloud Scan (Gradle)
        run: |
          echo "Running SonarCloud analysis for Gradle projects..."
          # Add sonar.java.libraries to the Gradle SonarCloud analysis.
          GRADLE_PROJECTS=$(find project/backend/ -name "build.gradle" -type f -not -path "project/backend/multiplayer-map-service*" -print0 | xargs -0 -n 1 dirname)
          for PROJECT_DIR in $GRADLE_PROJECTS; do
            echo "Analyzing Gradle project in $PROJECT_DIR"
            (cd "$PROJECT_DIR" && ./gradlew sonarqube \
              -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
              -Dsonar.java.libraries="$(./gradlew dependencies --configuration compileClasspath | grep '-> ' | sed 's/.*-> //')" \
              -Dsonar.projectKey=$(basename "$PROJECT_DIR") \
              -Dsonar.projectName=$(basename "$PROJECT_DIR") \
            )
          done
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
